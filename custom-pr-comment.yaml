# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev-2.x.json

author: Fortify
usage:
  header: (PREVIEW) Add GitHub Pull Request review comments with code snippet.
  description: |
    This action posts review comments to a GitHub Pull Request using the latest SSC scan data.
    In addition to listing new and removed vulnerabilities, it includes, for each vulnerability,
    a snippet of the affected source code and a brief description.
    (For best results, run this action immediately after publishing scan results.)

parameters:
  - name: appversion
    cliAliases: av
    description: "Required application version id or <appName>:<versionName>"
    type: appversion_single
  - name: filterset
    cliAliases: fs
    description: "Filter set name or guid from which to load issue data."
    required: false
    type: filterset
  - name: analysis-type
    cliAliases: t
    description: "Analysis type for which to list vulnerabilities."
    required: true
    defaultValue: SCA
  - name: github-token
    description: "Required GitHub Token. Default value: GITHUB_TOKEN environment variable."
    required: true
    defaultValue: ${#env('GITHUB_TOKEN')}
  - name: github-owner
    description: "Required GitHub repository owner. Default value: GITHUB_REPOSITORY_OWNER environment variable."
    required: true
    defaultValue: ${#env('GITHUB_REPOSITORY_OWNER')}
  - name: github-repo
    description: "Required GitHub repository. Default value: Taken from GITHUB_REPOSITORY environment variable."
    required: true
    defaultValue: ${#substringAfter(#env('GITHUB_REPOSITORY'),'/')}
  - name: pr
    description: "Required PR number. Default value: Taken from GITHUB_REF_NAME environment variable."
    required: true
    defaultValue: ${#substringBefore(#env('GITHUB_REF_NAME'),'/')}
  - name: commit
    description: "Required commit hash. Default value: GITHUB_SHA environment variable."
    required: true
    defaultValue: ${#env('GITHUB_SHA')}
  - name: dryrun
    description: "Set to true to output PR decoration JSON without updating the PR."
    type: boolean
    required: false
    defaultValue: false

addRequestTargets:
  - name: github
    baseUrl: https://api.github.com
    headers:
      Authorization: Bearer ${parameters['github-token']}
      'X-GitHub-Api-Version': '2022-11-28'

defaults:
  requestTarget: ssc

steps:
  - progress: "Processing issue data for appversion ${parameters.appversion.id}"
  - requests:
      - name: issues
        uri: /api/v1/projectVersions/${parameters.appversion.id}/issues?limit=200
        query:
          showremoved: true
          filter: ISSUE[11111111-1111-1111-1111-111111111151]:${parameters['analysis-type']}
          filterset: ${parameters.filterset.guid}
        pagingProgress:
          postPageProcess: "Processed ${totalIssueCount?:0} issues"
        forEach:
          name: issue
          if: ${issue.scanStatus != 'UPDATED'}
          embed:
            - name: details
              uri: /api/v1/issueDetails/${issue.id}
          do:
            - requests:
              - name: GitHub PR review comments
                method: POST
                uri: /repos/${parameters['github-owner']}/${parameters['github-repo']}/pulls/comments
                target: github
                body: ${reviewComment}
  - progress: "Generating GitHub review request"
  - set:
      - name: reviewBody
        valueTemplate: reviewBody
      - name: reviewRequestBody
        valueTemplate: reviewRequestBody
  - if: ${parameters.dryrun}
    write:
      - to: stdout
        value: ${reviewRequestBody}
  - if: ${!parameters.dryrun}
    requests:
      - name: GitHub PR review
        method: POST
        uri: /repos/${parameters['github-owner']}/${parameters['github-repo']}/pulls/${parameters.pr}/reviews
        target: github
        body: ${reviewRequestBody}

valueTemplates:
  - name: reviewComment
    contents:
      side: "RIGHT"
      commit_id: ${parameters.commit}
      body: ${issue.issueName}
      line: ${issue.lineNumber}
      path: ${issue.fullFileName}
  - name: reviewRequestBody
    contents:
      owner: ${parameters['github-owner']}
      repo: ${parameters['github-repo']}
      pull_number: ${parameters.pr}
      commit_id: ${parameters.commit}
      body: ${reviewBody}
      event: COMMENT
      comments: ${jsonSourceCodeComments}
  - name: reviewBody
    contents: |
      ## Fortify Vulnerability Summary
      
      ### New Issues
      
      ${newIssues == null ? "* No new or re-introduced issues were detected" : ("* " + #join('\n* ', newIssues))}
      
      ### Removed Issues
      
      ${removedIssues == null ? "* No removed issues were detected" : ("* " + #join('\n* ', removedIssues))}
  - name: jsonSourceCodeComment
    contents:
      path: ${issue.fullFileName}
      line: ${issue.lineNumber}
      body: |
        <p><b>Security Scanning</b> / Fortify SAST</p>
        <h3>${issue.details.friority} - ${issue.details.issueName}</h3>
        <p>${issue.details.brief}</p>
        <p><b>Affected Code:</b></p>
        <pre>${issue.details.codeSnippet}</pre>
        <br>
        <p><a href='${#ssc.issueBrowserUrl(issue, parameters.filterset)}' target='_blank' rel='noopener noreferrer'>More information</a></p>
  - name: mdIssueListItem
    contents: >
      ${issue.scanStatus} (${issue.engineCategory}): [${issue.fullFileName}${issue.lineNumber==null ? '' : ':'+issue.lineNumber} - ${issue.issueName}](${#ssc.issueBrowserUrl(issue, parameters.filterset)})
